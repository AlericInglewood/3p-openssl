GETTING STARTED
===============

Cloning
-------

This repository contains a submodule.
To clone this repository, first clone it as usual, then cd into
the cloned repository and execute from the commandline:

$ git clone https://github.com/AlericInglewood/3p-openssl.git 3p-openssl
$ cd 3p-openssl
$ git submodule init
$ git submodule update

Updating openssl-git
--------------------

To update the submodule, simply cd into openssl-git and
treat it as a normal git repository.

$ cd openssl-git
$ git reset --hard		# Throw away all local changes!
$ git checkout master
$ git pull
$ git tag
$ git checkout OpenSSL_1_0_1j

Register in the superproject that a different checkout is being used:

$ cd ..
$ git commit -am 'Updated submodule openssl-git to OpenSSL_1_0_1j'

(Don't forget the update the version in autobuild.xml too)

Fixing dependencies
-------------------

The dependencies in the Makefile of openssl-git are wrong for our
purposes (it contains a dependency on, for example, openssl/idea.h
that doesn't work). You therefore need to fix the dependencies first
as follows:

$ cd openssl-git
$ ./Configure dist
$ make dclean
$ make clean
$ make depend

This changed the 'content' of openssl-git, which requires the
the 'git reset --hard' above when you want to update the library
source code.

$ cd ..
$ git commit -am 'Updated openssl-git dependencies'

After fixing the dependencies, you can continue with building.


BUILDING
========

# To build the package:
cd 3p-openssl
autobuild build
autobuild package

The produced package is directly usable for Singularity and
does not need conversion.
