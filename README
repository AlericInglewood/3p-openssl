GETTING STARTED
===============

Cloning
-------

This repository contains a submodule.
To clone this repository, first clone it as usual, then cd into
the cloned repository and execute the last two submodule more commands:

$ git clone https://github.com/AlericInglewood/3p-openssl.git 3p-openssl
$ cd 3p-openssl
$ git submodule init
$ git submodule update

Fixing dependencies
-------------------

The dependencies in the Makefile of openssl-git are wrong for our
configuration (it contains a dependency on, for example, openssl/idea.h
that doesn't work). You therefore need to fix the dependencies first
as follows:

$ cd openssl-git
$ ./Configure dist
$ make dclean
$ make clean
$ make depend

This changed the 'content' of openssl-git, which requires the
the 'git reset --hard' below when you want to update the library
source code.

Continue at BUILDING below, unless you actually need
to upgrade the openssl version (you'll need repository
write access for that though).

Updating openssl-git
--------------------

To update the submodule, simply cd into openssl-git and
treat it as a normal git repository.

$ cd openssl-git
$ git reset --hard		# Throw away all local changes!
$ git checkout master
$ git pull
$ git tag
$ git checkout OpenSSL_1_0_1j

Register in the superproject that a different checkout is being used:
Don't forget the update the version in autobuild.xml too!

$ cd ..
$ vi autobuild.xml
$ git commit -am 'Updated submodule openssl-git to OpenSSL_1_0_1j'


BUILDING
========

# To build the package:
cd 3p-openssl
autobuild install	# Install zlib
autobuild build
autobuild package

The produced package is directly usable for Singularity and
does not need conversion.

